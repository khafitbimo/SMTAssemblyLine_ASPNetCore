@model IEnumerable<SMTAssemblyLineWebApp.Models.SMTViewModels.StationCountDataToday>
@{
    ViewData["Title"] = "Home Page";
}

<div class="card">
    <div class="card-body">
        <h2 class="card-title">SMT Assembly Line</h2>

        <div class="row">

            <div class="col-md-3 left-div">
                <div class="col-md-12 card-panel-out">
                    <div class="card-panel-in" id="card-panel-in">
                        @foreach (var item in Model)
                        {
                            <div class="col-md-12 alert-success">
                                <div class="card card-station">
                                    <div class="d-flex flex-row">
                                        <div class="p-10">
                                            <h3 class="text-success mb-0">Station #@item.STATION_ID : @item.STATION_NAME</h3>
                                            <span class="text-muted" id="count-station-@item.STATION_ID">Count : @item.STATION_COUNT_TODAY</span>
                                        </div>
                                        <div class="p-10 bg-success ml-auto div-button">
                                            <button type="button" class="btn text-white box mb-0 btn-outline-success btnStation"><i class="ti-plus"></i><input type="hidden" id="stationId" name="stationId" value=@item.STATION_ID></button>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>


                </div>

                <div class="col-sm-12 col-md-12">
                    <button type="button" class="btn waves-effect waves-light btn-rounded btn-outline-primary btn-add-station" id="btn-add-station" data-toggle="modal" data-target="#newStationModal">Add Station</button>
                </div>
            </div>

            <div class="col-md-9 right-div">
                <div class="col-md-12">
                    <div class="card">

                        <div class="chartjs-size-monitor">
                            <div class="chartjs-size-monitor-expand">
                                <div class="">
                                </div>
                            </div>
                            <div class="chartjs-size-monitor-shrink">
                                <div class="">
                                </div>
                            </div>
                        </div>
                        <canvas id="canvas" style="display: block; width: 600px; height: 200px;" width="600" height="200" class="chartjs-render-monitor"></canvas>

                    </div>
                </div>
                <div class="col-md-12 grid-panel-out">
                    <div class="grid-panel-in" id="grid-panel-in">
                        @foreach (var item in Model)
                        {
                            <div class="card card-grid">
                                <div class="card-body alert-warning">
                                    <h4 class="card-title">Station # @item.STATION_ID</h4>
                                </div>
                                <div class="table-responsive">
                                    <table class="table table-hover">
                                        <thead>
                                            <tr>
                                                <th scope="col">Material</th>
                                                <th scope="col">Count/Hour</th>
                                                <th scope="col">Max Count/Hour</th>
                                                <th scope="col">Min Count/Hour</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <th scope="row">@item.STATION_NAME</th>
                                                <td id="col-avg-@item.STATION_ID">@item.STATION_AVG_COUNT_TODAY</td>
                                                <td id="col-max-@item.STATION_ID">@item.STATION_MAX_COUNT_TODAY</td>
                                                <td id="col-min-@item.STATION_ID">@item.STATION_MIN_COUNT_TODAY</td>
                                            </tr>

                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        }



                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

<div id="newStationModal" class="modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" style="display: none;" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">New Station</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <form class="form-horizontal" id="addStationForm">
                <div class="modal-body">
                    <div class="form-group">
                        <input name="stationTitle" type="text" class="form-control" id="stationTitle" placeholder="Title">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn waves-effect waves-light btn-success">OK</button>
                    <button type="button" class="btn waves-effect waves-light btn-danger" data-dismiss="modal">Cancel</button>
                </div>
            </form>

        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

@section Scripts{

    <script>
        var HOURS = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24];

        window.chartColors = {
            red: 'rgb(255, 99, 132)',
            orange: 'rgb(255, 159, 64)',
            yellow: 'rgb(255, 205, 86)',
            green: 'rgb(75, 192, 192)',
            blue: 'rgb(54, 162, 235)',
            purple: 'rgb(153, 102, 255)',
            grey: 'rgb(201, 203, 207)'
        };

        var myDataSets = [];

        var config = {
            type: 'line',
            data: {
                labels: HOURS,
                datasets: myDataSets,
            },
            options: {
                responsive: true,
                title: {
                    display: true,
                    text: 'SMT Assembly Line Chart'
                },
                tooltips: {
                    mode: 'index',
                    intersect: false,
                },
                hover: {
                    mode: 'nearest',
                    intersect: true
                },
                scales: {
                    xAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Hour'
                        }
                    }],
                    yAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Count'
                        },
                        ticks: {
                            suggestedMin: 0,    // minimum will be 0, unless there is a lower value.
                            //// OR //
                            //beginAtZero: true   // minimum value will be 0.
                            stepSize: 10
                        }
                    }]
                }
            }
        };



        var colorNames = Object.keys(window.chartColors);
        function loadChart() {
            
            var canvas = document.getElementById('canvas');
            var ctx = canvas.getContext('2d');

            $.ajax({
                type: "GET",
                url: "/Home/GetStation",
                success: function (response) {

                    $.each(response, function (key, value) {

                        var colorName = colorNames[key % colorNames.length]
                        var newColor = window.chartColors[colorName];

                        var _id = value["id"];

                        $.ajax({
                            type: "GET",
                            url: "/Home/GetStationCountToday",
                            data: { station_id: _id },
                            success: function (dataset) {
                                //console.log(dataset)

                                myDataSets.push({
                                    id: value["id"],
                                    label: value["statioN_NAME"],
                                    backgroundColor: newColor,
                                    borderColor: newColor,
                                    data: dataset,
                                    fill: false,
                                })

                            }
                        })
                    })
                }
            })
            window.myLine = new Chart(ctx, config);
        };

        window.onload = loadChart();

        $("#card-panel-in").on('click', '.btnStation', function (e) {
            e.preventDefault();
            $button = $(this).closest('button');
            var id = $button.children('input').map(function () {
                return $(this).val();
            }).get();

            $.ajax({
                type: "POST",
                url: "/Home/AddStationCount",
                data: { station_id: id },
                success: function (response) {
                    //console.log(response);
                    $("#count-station-" + id).text("Count : " + response["statioN_COUNT_TODAY"]);
                    $("#col-avg-" + id).html(response["statioN_AVG_COUNT_TODAY"]);
                    $("#col-max-" + id).html(response["statioN_MAX_COUNT_TODAY"]);
                    $("#col-min-" + id).html(response["statioN_MIN_COUNT_TODAY"]);

                    config.data.datasets.forEach(function (dataset) {
                        //console.log(dataset);
                        if (dataset.id == response["statioN_ID"]) {
                            $.ajax({
                                type: "GET",
                                url: "/Home/GetStationCountToday",
                                data: { station_id: dataset.id },
                                success: function (response) {
                                    //console.log(dataset);
                                    dataset.data = response;

                                    window.myLine.update();
                                }
                            })
                            return;
                        }

                    })
                }
            })
        });

        $(document).ready(function () {
            $("#addStationForm").on("submit", function (e) {
                e.preventDefault();
                var station_title = $("#stationTitle").val();
                $.ajax({
                    type: "POST",
                    url: "/Home/CreateStation",
                    data: { title: station_title },
                    success: function (response) {
                        //console.log(response);
                        $("#newStationModal").modal("hide");
                        $(".card-panel-in").append("<div class='col-md-12'> \
                                                                        <div class='card'> \
                                                                            <div class='d-flex flex-row'> \
                                                                                <div class='p-10'> \
                                                                                    <h3 class='text-success mb-0'>Station #"+ response["id"] + " : " + response["statioN_NAME"] + "</h3> \
                                                                                    <span class='text-muted' id='count-station-"+ response["id"] + "'>Count : 0</span> \
                                                                                </div> \
                                                                                <div class='p-10 bg-success ml-auto'> \
                                                                                    <button type='button' class='btn text-white box mb-0 btn-outline-success btnStation'><i class='ti-plus'></i><input type='hidden' id='stationId' name='stationId' value="+ response["id"] + "></button> \
                                                                                </div> \
                                                                            </div> \
                                                                        </div> \
                                                                    </div>");
                        $(".grid-panel-in").append("<div class='card card-grid'>\
                                                            <div class='card - body alert - warning'>\
                                                                <h4 class='card-title'>Station # "+ response["id"] + "</h4>\
                                                            </div>\
                                                            <div class='table-responsive'>\
                                                                <table class='table table-hover'>\
                                                                    <thead>\
                                                                        <tr>\
                                                                            <th scope='col'>Material</th>\
                                                                            <th scope='col'>Count/Hour</th>\
                                                                            <th scope='col'>Max Count/Hour</th>\
                                                                            <th scope='col'>Min Count/Hour</th>\
                                                                        </tr>\
                                                                    </thead>\
                                                                    <tbody>\
                                                                        <tr>\
                                                                            <th scope='row'>"+ response["statioN_NAME"] + "</th>\
                                                                            <td id='col-avg-" + response["id"] + "' >0</td>\
                                                                            <td id='col-max-" + response["id"] + "' >0</td>\
                                                                            <td id='col-min-" + response["id"] + "' >0</td>\
                                                                        </tr>\
                                                                    </tbody>\
                                                                </table>\
                                                            </div>\
                                                        </div>");

                        var colorName = colorNames[config.data.datasets.length % colorNames.length];
                        var newColor = window.chartColors[colorName];
                        var newDataSet = {
                            id: response["id"],
                            label: response["statioN_NAME"],
                            backgroundColor: newColor,
                            borderColor: newColor,
                            data: [0],
                            fill: false,

                        }

                        config.data.datasets.push(newDataSet);
                        window.myLine.update();




                    }
                })
            })
        });
    </script>


}

@section Style{
    <style>


        .btn-add-station {
            width: 100%;
        }

        .card-panel-in {
            height: 700px;
            overflow-y: auto;
        }

        .grid-panel-in {
            height: 300px;
            overflow-y: auto;
        }

        .thead-light {
            color: white;
        }

        canvas {
            -moz-user-select: none;
            -webkit-user-select: none;
            -ms-user-select: none;
        }

        chartjs-render-animation {
            from

        {
            opacity: .99
        }

        to {
            opacity: 1
        }

        }

        .chartjs-render-monitor {
            animation: chartjs-render-animation 1ms
        }

        .chartjs-size-monitor, .chartjs-size-monitor-expand, .chartjs-size-monitor-shrink {
            position: absolute;
            direction: ltr;
            left: 0;
            top: 0;
            right: 0;
            bottom: 0;
            overflow: hidden;
            pointer-events: none;
            visibility: hidden;
            z-index: -1
        }

            .chartjs-size-monitor-expand > div {
                position: absolute;
                width: 1000000px;
                height: 1000000px;
                left: 0;
                top: 0
            }

            .chartjs-size-monitor-shrink > div {
                position: absolute;
                width: 200%;
                height: 200%;
                left: 0;
                top: 0
            }
    </style>

}
